apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 12
        versionName "1.2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    provided 'com.google.android.gms:play-services-ads:10.2.4'
    provided group: 'org.greenrobot', name: 'eventbus', version: '3.0.0'
    provided 'com.android.support:support-v4:25.0.+'

    compile 'com.kidoz.sdk:KidozSDK:0.8.5.1@aar'


}


task deleteJarDebug(type: Delete) {
    delete 'outputs/jar/kidoz-admob-debug.jar'
}

task createJarDebug(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into('build/outputs/jar')
    include('classes.jar')
    rename('classes.jar', 'kidoz-admob-debug.jar')
}

/*libraryVariants.all { variant ->
    variant.outputs.each { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.aar')) {
            def fileName = "${archivesBaseName}-${version}.aar"
            output.outputFile = new File(outputFile.parent, fileName)
        }
    }
}*/
createJarDebug.dependsOn(deleteJarDebug)

//execute debug Jar creation after last build task
tasks.whenTaskAdded { task ->
    if (task.name == 'bundleDebug') {
        task.finalizedBy createJarDebug
    }
}

// delete & recreate release Jar
task deleteJarRelease(type: Delete) {
    delete 'outputs/jar/kidoz-admob-release.jar'
}

task createJarRelease(type: Copy) {
    from('build/intermediates/bundles/default/') //not clear why under this project 'release' folder is called 'default'
    into('build/outputs/jar')
    include('classes.jar')
    rename('classes.jar', 'kidoz-admob-release.jar')
}

//execute debug Jar creation after last build task
tasks.whenTaskAdded { task ->
    if (task.name == 'bundleRelease') {
        task.finalizedBy createJarRelease
    }
}

